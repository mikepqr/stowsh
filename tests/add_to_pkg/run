#!/bin/bash

stowsh=../../stowsh

fail=0
fails=0

red=""; green=""; normal="";
[[ $(type -P tput) ]] &&
  [[ "$(tput colors)" -ge 8 ]] &&
  normal="$(tput sgr0)" &&
  red="$(tput setaf 1)" &&
  green="$(tput setaf 2)" &&
  yellow="$(tput setaf 3)"

FAIL="${red}FAIL${normal}"
PASS="${green}PASS${normal}"

echo
echo \#\# Test that we can grab the tree in src
rm -rf "pkg"
$stowsh -vv -t "src" -a "pkg" "src" || fail=1
diff -qr "pkg" "src" || fail=1
echo \#\# Report
echo ${yellow}Listing src${normal}
tree src
echo ${yellow}Listing pkg${normal}
tree pkg
if [[ $fail == 1 ]] ; then
    echo $FAIL
else
    echo $PASS
fi
fails=$(( $fails + $fail ))

echo
echo \#\# Test that we don\'t overwrite a file with a directory
rm -rf "pkg"
mkdir -p pkg
touch pkg/path
$stowsh -vv -t "src" -a "pkg" "src" && fail=1
echo \#\# Report
echo ${yellow}Listing src${normal}
tree src
echo ${yellow}Listing pkg${normal}
tree pkg
if [[ $fail == 1 ]] ; then
    echo $FAIL
else
    echo $PASS
fi
fails=$(( $fails + $fail ))
rm -rf "pkg"

echo
echo \#\# Test that we overwrite a versioned file with a new
$stowsh -vv -t "src" -g -a "git_pkg" "src/file" || fail=1
echo \#\# Report
echo ${yellow}Listing src${normal}
tree src
echo ${yellow}Listing git_pkg${normal}
tree git_pkg
if [[ $fail == 1 ]] ; then
    echo $FAIL
else
    echo $PASS
fi
fails=$(( $fails + $fail ))
git restore --staged git_pkg

echo
echo \#\# Test that we don\'t overwrite a modified versioned file
echo 3 > git_pkg/file
$stowsh -vv -t "src" -g -a "git_pkg" "src" && fail=1
echo \#\# Report
echo ${yellow}Listing src${normal}
tree src
echo ${yellow}Listing git_pkg${normal}
tree git_pkg
if [[ $fail == 1 ]] ; then
    echo $FAIL
else
    echo $PASS
fi
fails=$(( $fails + $fail ))
git restore git_pkg
git restore --staged git_pkg



echo \#\# add_to_pkg result
if [[ $fails -ge 1 ]] ; then
    echo $FAIL
    exit 1
else
    echo $PASS
    exit 0
fi
